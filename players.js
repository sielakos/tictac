// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.PlayerManager = (function() {
    function PlayerManager(gameModel) {
      this.gameModel = gameModel;
      this.firstPlayer = null;
      this.secondPlayer = null;
    }

    PlayerManager.prototype.askForMove = function(callback) {
      if (this.gameModel.firstPlayer) {
        return this.firstPlayer.askForMove(function(tileX, tileY) {
          return callback(tileX, tileY, true);
        });
      } else {
        return this.secondPlayer.askForMove(function(tileX, tileY) {
          return callback(tileX, tileY, false);
        });
      }
    };

    return PlayerManager;

  })();

  this.HumanPlayer = (function() {
    function HumanPlayer(ticTac) {
      this.ticTac = ticTac;
      this.makeMove = __bind(this.makeMove, this);
      this.active = false;
      this.callback = null;
      this.ticTac.addClickCallback(this.makeMove);
    }

    HumanPlayer.prototype.makeMove = function() {
      var tileX, tileY;
      if (this.active) {
        tileX = this.ticTac.layer.getTileX(this.ticTac.game.input.activePointer.worldX);
        tileY = this.ticTac.layer.getTileY(this.ticTac.game.input.activePointer.worldY);
        if (this.callback != null) {
          this.callback(tileX, tileY);
        }
        return this.active = false;
      }
    };

    HumanPlayer.prototype.askForMove = function(callback) {
      this.callback = callback;
      return this.active = true;
    };

    return HumanPlayer;

  })();

}).call(this);
