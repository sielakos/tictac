// Generated by CoffeeScript 1.7.1
(function() {
  this.SimpleAiPlayer = (function() {
    function SimpleAiPlayer(makeModelCopy, playerNumber) {
      this.makeModelCopy = makeModelCopy;
      this.playerNumber = playerNumber;
      this.valueMatrix = null;
    }

    SimpleAiPlayer.prototype.askForMove = function(callback) {
      return window.setTimeout(this.calculcateMove(callback), 0);
    };

    SimpleAiPlayer.prototype.calculcateMove = function(callback) {
      return (function(_this) {
        return function() {
          var model;
          model = _this.makeModelCopy();
          return _this.valueMatrix = _this.createValueMatrixIfDoesntExists(_this.valueMatrix);
        };
      })(this);
    };

    SimpleAiPlayer.prototype.createValueMatrixIfDoesntExists = function(model, matrix) {
      var i, j, _i, _ref, _results;
      if (!matrix) {
        _results = [];
        for (i = _i = 0, _ref = model.mapSize(-1); 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push((function() {
            var _j, _ref1, _results1;
            _results1 = [];
            for (j = _j = 0, _ref1 = model.mapSize - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
              _results1.push(0);
            }
            return _results1;
          })());
        }
        return _results;
      } else {
        return matrix;
      }
    };

    SimpleAiPlayer.prototype.updatePointsMatrix = function(model) {};

    SimpleAiPlayer.prototype.getPoints = function(model) {
      var changer, changers, i, points, x, y, _i, _j, _len;
      changers = model.createDirectionChangers();
      points = [model.lastMove];
      for (_i = 0, _len = changers.length; _i < _len; _i++) {
        changer = changers[_i];
        x = model.lastMove.x;
        y = model.lastMove.y;
        for (i = _j = 1; _j <= 4; i = ++_j) {
          x += changer[0];
          y += changer[1];
          if (model.isWithinStageBounds(x, y)) {
            points.push({
              x: x,
              y: y
            });
          }
        }
      }
      return points;
    };

    return SimpleAiPlayer;

  })();

}).call(this);
